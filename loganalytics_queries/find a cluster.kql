//find a cluster
DatabricksClusters
| order by TimeGenerated desc
| limit 20


//resize
let Clusters = datatable(ClusterId:string)
    ["0310-103522-zj6pgrgi"];
DatabricksClusters 
| where ActionName == 'resize' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['cluster_id']", tostring(rparams))
| extend Message = extractjson("$.['autoscale']", tostring(rparams))
| join kind=inner Clusters on ClusterId


//delete
let Clusters = datatable(ClusterId:string)
    ["0310-103522-zj6pgrgi"];
DatabricksClusters 
| where ActionName == 'delete' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['cluster_id']", tostring(rparams))
| extend Message = extractjson("$.['termination_reason']", tostring(rparams))
| join kind=inner Clusters on ClusterId

//deleteResult
let Clusters = datatable(ClusterId:string)
    ["0310-103522-zj6pgrgi"];
DatabricksClusters 
| where ActionName == 'deleteResult' 
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['clusterId']", tostring(rparams))
| extend Message = extractjson("$.['clusterState']", tostring(rparams))
| join kind=inner Clusters on ClusterId


//create
let Clusters = datatable(ClusterId:string)
    ["0310-103522-zj6pgrgi"];
DatabricksClusters 
| where ActionName == 'create' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend ClusterName = extractjson("$.['cluster_name']", tostring(rparams)), ClusterCreator = extractjson("$.['cluster_creator']", tostring(rparams))
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['cluster_id']", tostring(response.result))
| extend NodeTypeId = extractjson("$.['node_type_id']", tostring(rparams))
| join kind=inner Clusters on ClusterId



//resizeResult
let Clusters = datatable(ClusterId:string)
    ["0310-103522-zj6pgrgi"];
DatabricksClusters 
| where ActionName == 'resizeResult' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['clusterId']", tostring(rparams))
| extend Message = extractjson("$.['clusterName']", tostring(rparams))
| join kind=inner Clusters on ClusterId


//start
let Clusters = datatable(ClusterId:string)
    ["0310-103522-zj6pgrgi"];
DatabricksClusters 
| where ActionName == 'start' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['cluster_id']", tostring(rparams))
| extend Message = response.result
| join kind=inner Clusters on ClusterId

| project TimeGenerated, ActionName, StatusCode, ClusterId, Identity


//start
let Clusters = datatable(ClusterId:string)
    ["0310-103522-zj6pgrgi"];
let cStart = DatabricksClusters 
| where ActionName == 'start' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['cluster_id']", tostring(rparams))
| extend Message = response.result
| join kind=inner Clusters on ClusterId
| project TimeGenerated, ActionName, StatusCode, ClusterId, Identity;
//resize
let cResize = DatabricksClusters 
| where ActionName == 'resize' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['cluster_id']", tostring(rparams))
| extend Message = extractjson("$.['autoscale']", tostring(rparams))
| join kind=inner Clusters on ClusterId
| project TimeGenerated, ActionName, StatusCode, ClusterId, Identity;
let cResizeResult = DatabricksClusters 
| where ActionName == 'resizeResult' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['clusterId']", tostring(rparams))
| extend Message = extractjson("$.['clusterName']", tostring(rparams))
| join kind=inner Clusters on ClusterId
| project TimeGenerated, ActionName, StatusCode, ClusterId, Identity, Message;
//delete
let cDelete = DatabricksClusters 
| where ActionName == 'delete' //create a cluster
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['cluster_id']", tostring(rparams))
| extend Message = extractjson("$.['termination_reason']", tostring(rparams))
| join kind=inner Clusters on ClusterId
| project TimeGenerated, ActionName, StatusCode, ClusterId, Identity, Message;
//deleteResult
let cDeleteResult = DatabricksClusters 
| where ActionName == 'deleteResult' 
| extend rparams = parse_json(RequestParams)
| extend response = parse_json(Response)
| extend StatusCode = response.statusCode
| extend ClusterId = extractjson("$.['clusterId']", tostring(rparams))
| extend Message = extractjson("$.['clusterState']", tostring(rparams))
| join kind=inner Clusters on ClusterId
| project TimeGenerated, ActionName, StatusCode, ClusterId, Identity, Message;
cStart | union cResize, cResizeResult, cDeleteResult, cDeleteResult
| order by TimeGenerated asc

